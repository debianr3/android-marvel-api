apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'io.gitlab.arturbosch.detekt'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def privateKey = properties.getProperty('marvel.api.privateKey')
def publicKey = properties.getProperty('marvel.api.publicKey')

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.igmob.android.marvelapi"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'BASE_URL', '"https://gateway.marvel.com/"'
        buildConfigField 'String', 'MARVEL_API_PRIVATE_KEY', '"' + privateKey + '"'
        buildConfigField 'String', 'MARVEL_API_PUBLIC_KEY', '"' + publicKey + '"'

        // We need to display the marvel attribution:
        // https://developer.marvel.com/documentation/attribution
        buildConfigField 'String', 'MARVEL_ATTRIBUTION', '"Data provided by Marvel. Â© 2014 Marvel"'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        allWarningsAsErrors = true
    }
}

detekt {
    toolVersion = "$detekt_version"
    config = files("$rootDir/default-detekt-config.yml")
}

dependencies {
    def lifecycle_version = "2.0.0"
    def room_version = "2.+"
    def kotlin_coroutines_version = "1.+"
    def koin_version = '2.0.1'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android X
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.+'
    implementation "com.squareup.retrofit2:converter-moshi:2.+"

    // Moshi
    implementation("com.squareup.moshi:moshi:1.+")

    // Koin
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"

    // Fresco
    implementation 'com.facebook.fresco:fresco:2.0.0'

    // Test
    testImplementation("org.junit.jupiter:junit-jupiter:5.+")
    testImplementation "io.mockk:mockk:1.+"
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:0.42'
}
